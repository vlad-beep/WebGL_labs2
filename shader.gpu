/// Vertex shader
const vertexShaderSource = `
attribute vec3 vertex;
attribute vec2 texture;
uniform mat4 ModelViewProjectionMatrix;
varying vec2 v_texcoord;

uniform vec3 translateUP;
uniform vec2 userPoint;
uniform float rotA;

//function to create a displacement matrix
mat4 translation(float tx, float ty, float tz) {
    mat4 dst;

    dst[0][0] = 1.0;
    dst[0][ 1] = 0.0;
    dst[0][ 2] = 0.0;
    dst[0][ 3] = 0.0;
    dst[1][ 0] = 0.0;
    dst[1][ 1] = 1.0;
    dst[1][ 2] = 0.0;
    dst[1][ 3] = 0.0;
    dst[2][ 0] = 0.0;
    dst[2][ 1] = 0.0;
    dst[2][ 2] = 1.0;
    dst[2][ 3] = 0.0;
    dst[3][ 0] = tx;
    dst[3][ 1] = ty;
    dst[3][ 2] = tz;
    dst[3][ 3] = 1.0;
    return dst;
}
//function to create a rotation matrix
mat4 rotation(float angleInRadians) {
    mat4 dst;
    float c = cos(angleInRadians);
    float s = sin(angleInRadians);

    dst[0][0] = c;
    dst[0][ 1] = s;
    dst[0][ 2] = 0.0;
    dst[0][ 3] = 0.0;
    dst[1][ 0] = -s;
    dst[1][ 1] = c;
    dst[1][ 2] = 0.0;
    dst[1][ 3] = 0.0;
    dst[2][ 0] = 0.0;
    dst[2][ 1] = 0.0;
    dst[2][ 2] = 1.0;
    dst[2][ 3] = 0.0;
    dst[3][ 0] = 0.0;
    dst[3][ 1] = 0.0;
    dst[3][ 2] = 0.0;
    dst[3][ 3] = 1.0;

    return dst;
}

void main() {
    mat4 rotMatrix = rotation(rotA);
    mat4 transMatrix1 = translation(userPoint.x,userPoint.y,0.0);
    mat4 transMatrix2 = translation(-userPoint.x,-userPoint.y,0.0);
    vec4 texture1 = vec4(texture,0.0,0.0)*transMatrix1;
    //обертаємо текстуру
    vec4 textureRotated = texture1*rotMatrix;
    vec4 texture2 = textureRotated*transMatrix2;
    v_texcoord = vec2(texture2.x,texture2.y);
    vec4 vertPos4 = ModelViewProjectionMatrix * vec4(vertex, 1.0);
    gl_Position = vertPos4;
    if(rotA>1000.0){
        vec4 translatePoint = translation(translateUP.x,translateUP.y,translateUP.z)*vec4(vertex,1.0);
        gl_Position = ModelViewProjectionMatrix*translatePoint;
    }
    }`;


// Fragment shader
const fragmentShaderSource = `
#ifdef GL_FRAGMENT_PRECISION_HIGH
   precision highp float;
#else
   precision mediump float;
#endif
varying vec2 v_texcoord;
uniform sampler2D tmu;
uniform float rotA;
void main() {
    //apply texture
    vec4 texColor = texture2D(tmu, v_texcoord);
    gl_FragColor = texColor;
    if(rotA>1000.0){
        gl_FragColor = vec4(0.,0.,0.,0.);
    }
}`;